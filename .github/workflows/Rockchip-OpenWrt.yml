name: Rockchip OpenWrt R4S

on:
  workflow_dispatch:
  schedule:
    - cron: 0 18 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: configs/rockchip.config
  EXTRA_CONFIG: configs/extra.config
  DIY_SCRIPT: diy-script.sh
  CLASH_KERNEL: arm64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: Rockchip-R4S
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check Server Performance
      run: |
        echo "CPU核心数量: $(nproc)"
        echo "内存信息:" && free -h
        echo "磁盘信息:" && df -hT

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo timedatectl set-timezone "$TZ"

    - name: Checkout Source
      uses: actions/checkout@v3

    # 释放磁盘空间
    - name: Free Disk Space
      run: |
        echo "=== Before clean ==="
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/hostedtoolcache
        docker rmi $(docker images -q) || true
        echo "=== After clean ==="
        df -h

    - name: Clone OpenWrt Source
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

    # 把源码目录移到 /mnt，利用大磁盘空间
    - name: Move OpenWrt to larger disk
      run: |
        sudo mkdir -p /mnt/openwrt
        sudo chown $USER:$USER /mnt/openwrt
        rsync -a --delete ./openwrt/ /mnt/openwrt/
        rm -rf ./openwrt
        ln -s /mnt/openwrt ./openwrt
        echo "=== After move ==="
        df -h

    - name: Cache DL Packages
      uses: actions/cache@v3
      with:
        path: openwrt/dl
        key: dl-${{ env.REPO_BRANCH }}-r4s

    - name: Cache Staging Dir
      uses: actions/cache@v3
      with:
        path: openwrt/staging_dir
        key: staging-${{ env.REPO_BRANCH }}-r4s

    - name: Cache Toolchain
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: false
        mixkey: ${{ env.REPO_BRANCH }}-r4s
        prefix: ${{ env.OPENWRT_PATH }}

    - name: Load Custom Config
      run: |
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cat $EXTRA_CONFIG >> $OPENWRT_PATH/.config
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT
        make defconfig

    - name: Download Required Packages
      run: |
        cd $OPENWRT_PATH
        make download -j8

    - name: Compile Firmware (R4S only)
      id: compile
      run: |
        cd $OPENWRT_PATH
        mkdir -p files/etc/uci-defaults
        make -j$(nproc) V=s || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: List LuCI Apps
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        echo "============= 已编译进固件的 LuCI 插件 ============="
        grep "^luci-app-" *.manifest || echo "未检测到 LuCI 插件"
        echo "==================================================="

    - name: Organize Files
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        cat sha256sums
        cp $OPENWRT_PATH/.config build.config
        mv -f $OPENWRT_PATH/bin/packages/*/*/*.ipk packages
        tar -zcf Packages.tar.gz packages
        rm -rf packages feeds.buildinfo version.buildinfo
        echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: Upload Firmware To Release
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }}-${{ github.run_number }} for ${{ env.FIRMWARE_TAG }}
        allowUpdates: false
        tag: ${{ env.FIRMWARE_TAG }}-${{ env.DATE }}-${{ github.run_id }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          **OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          - 平台架构: rk3399 (R4S)
          - 源码仓库: ${{ env.REPO_URL }}
          - 分支: ${{ env.REPO_BRANCH }}
          - 内核版本: ${{ env.KERNEL }}
          - 默认地址: 192.168.1.1
          - 默认密码: password
